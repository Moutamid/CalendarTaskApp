// Generated by view binder compiler. Do not edit!
package com.moutamid.calenderapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.moutamid.calenderapp.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MaterialButton editProfile;

  @NonNull
  public final TextView email;

  @NonNull
  public final MaterialButton logout;

  @NonNull
  public final TextView name;

  @NonNull
  public final MaterialButton privacy;

  @NonNull
  public final CircleImageView profileImage;

  @NonNull
  public final MaterialButton terms;

  @NonNull
  public final MaterialCardView toolbar;

  private FragmentSettingsBinding(@NonNull RelativeLayout rootView,
      @NonNull MaterialButton editProfile, @NonNull TextView email, @NonNull MaterialButton logout,
      @NonNull TextView name, @NonNull MaterialButton privacy,
      @NonNull CircleImageView profileImage, @NonNull MaterialButton terms,
      @NonNull MaterialCardView toolbar) {
    this.rootView = rootView;
    this.editProfile = editProfile;
    this.email = email;
    this.logout = logout;
    this.name = name;
    this.privacy = privacy;
    this.profileImage = profileImage;
    this.terms = terms;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.editProfile;
      MaterialButton editProfile = ViewBindings.findChildViewById(rootView, id);
      if (editProfile == null) {
        break missingId;
      }

      id = R.id.email;
      TextView email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.logout;
      MaterialButton logout = ViewBindings.findChildViewById(rootView, id);
      if (logout == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.privacy;
      MaterialButton privacy = ViewBindings.findChildViewById(rootView, id);
      if (privacy == null) {
        break missingId;
      }

      id = R.id.profileImage;
      CircleImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.terms;
      MaterialButton terms = ViewBindings.findChildViewById(rootView, id);
      if (terms == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialCardView toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((RelativeLayout) rootView, editProfile, email, logout,
          name, privacy, profileImage, terms, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
