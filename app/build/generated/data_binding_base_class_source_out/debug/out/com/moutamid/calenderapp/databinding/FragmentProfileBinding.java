// Generated by view binder compiler. Do not edit!
package com.moutamid.calenderapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.moutamid.calenderapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MaterialButton edit;

  @NonNull
  public final TextView eventCount;

  @NonNull
  public final RecyclerView eventsRC;

  @NonNull
  public final MaterialButton logout;

  @NonNull
  public final TextView name;

  @NonNull
  public final MaterialButton newEvent;

  @NonNull
  public final LinearLayout noItemLayout;

  @NonNull
  public final ImageView profileIcon;

  @NonNull
  public final MaterialCardView profileImage;

  private FragmentProfileBinding(@NonNull RelativeLayout rootView, @NonNull MaterialButton edit,
      @NonNull TextView eventCount, @NonNull RecyclerView eventsRC, @NonNull MaterialButton logout,
      @NonNull TextView name, @NonNull MaterialButton newEvent, @NonNull LinearLayout noItemLayout,
      @NonNull ImageView profileIcon, @NonNull MaterialCardView profileImage) {
    this.rootView = rootView;
    this.edit = edit;
    this.eventCount = eventCount;
    this.eventsRC = eventsRC;
    this.logout = logout;
    this.name = name;
    this.newEvent = newEvent;
    this.noItemLayout = noItemLayout;
    this.profileIcon = profileIcon;
    this.profileImage = profileImage;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edit;
      MaterialButton edit = ViewBindings.findChildViewById(rootView, id);
      if (edit == null) {
        break missingId;
      }

      id = R.id.eventCount;
      TextView eventCount = ViewBindings.findChildViewById(rootView, id);
      if (eventCount == null) {
        break missingId;
      }

      id = R.id.eventsRC;
      RecyclerView eventsRC = ViewBindings.findChildViewById(rootView, id);
      if (eventsRC == null) {
        break missingId;
      }

      id = R.id.logout;
      MaterialButton logout = ViewBindings.findChildViewById(rootView, id);
      if (logout == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.newEvent;
      MaterialButton newEvent = ViewBindings.findChildViewById(rootView, id);
      if (newEvent == null) {
        break missingId;
      }

      id = R.id.noItemLayout;
      LinearLayout noItemLayout = ViewBindings.findChildViewById(rootView, id);
      if (noItemLayout == null) {
        break missingId;
      }

      id = R.id.profile_icon;
      ImageView profileIcon = ViewBindings.findChildViewById(rootView, id);
      if (profileIcon == null) {
        break missingId;
      }

      id = R.id.profileImage;
      MaterialCardView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      return new FragmentProfileBinding((RelativeLayout) rootView, edit, eventCount, eventsRC,
          logout, name, newEvent, noItemLayout, profileIcon, profileImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
